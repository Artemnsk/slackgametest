functions:
  # User is webserver.
  - webserverUser(): auth.uid === 'game-webserver'
  - teamExists(teamKey): root.teams[teamKey].exists()
  - channelExists(channelKey): root.channels[channelKey].exists()

schema:
  type: object
  additionalProperties: false
  constraint: (root.system.maintenance !== true)
  properties:
    # Stores information about system. Is not accessible, just for usage via Admin SDK.
    system:
      type: object
      properties:
        maintenance:
          type: boolean
        version:
          type: boolean
    # Store information about teams this app installed on.
    teams:
      type: object
      indexOn: ['active']
      $teamKey:
        type: object
        additionalProperties: false
        constraint: next.active === false || (next.token.exists() && next.userId.exists() && next.botId.exists() && next.botToken.exists())
        required: ['name', 'active']
        properties:
          active:
            type: boolean
          name:
            type: string
          token:
            type: string
          # User who installed this app.
          userId:
            type: string
          botId:
            type: string
          botToken:
            type: string
    # Stores information about team channels this app used in.
    channels:
      type: object
      indexOn: ['teamKey']
      constraint: teamExists(next)
      $teamKey:
        type: object
        indexOn: ['active']
        $channelKey:
          type: object
          additionalProperties: false
          required: ['active', 'name']
          properties:
            active:
              type: boolean
            name:
              type: string
    # Stores information about game states in channels.
    states:
      type: object
      $channelKey:
        type: object
        constraint: channelExists($channelKey)
        additionalProperties: false
        properties:
          number:
            type: number
    # Actions.
    actions:
      type: object
      $channelKey:
        type: object
        constraint: channelExists($channelKey)
        indexOn: ['startAt']
        $actionKey:
          type: object
          additionalProperties: false
          required: ['type', 'startAt', 'number']
          properties:
            type:
              type: string
            startAt:
              type: number
            number:
              type: number

access:
  - location: /teams
    read: webserverUser()
  - location: /teams/$teamKey
    write: webserverUser()

  - location: /channels/$teamKey
    read: webserverUser()
  - location: /channels/$teamKey/$channelKey
    write: webserverUser()

  - location: /state
    read: webserverUser()
    write: webserverUser()

  - location: /states
    read: webserverUser()
  - location: /states/$channelKey
    write: webserverUser()

  - location: /actions
    read: webserverUser()
  - location: /actions/$channelKey/$actionKey
    write: webserverUser()